name: Build and Test

on:
    push:
    pull_request:
        types:
            - opened
            - reopened
            - synchronize
            - ready_for_review

env:
    CARGO_TERM_COLOR: always
    SCCACHE_GHA_ENABLED: "false"
    RUSTC_WRAPPER: "sccache"

jobs:
    # TODO: Add a job to run clippy
    lint:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - name: Check formatting
              run: cargo fmt --all -- --check
            - name: Check template formating
              run: cd templates/mopro-example-app && cargo fmt --all -- --check

    test-cli:
        runs-on: macos-latest
        steps:
            - uses: actions/checkout@v4
            - name: Install Rust toolchain
              uses: actions-rs/toolchain@v1
              with:
                  toolchain: "1.77"
                  override: true
            - name: Install circom
              run: |
                  sudo wget -O ~/.cargo/bin/circom https://github.com/iden3/circom/releases/download/v2.1.9/circom-${{runner.os}}-amd64
                  sudo chmod +x ~/.cargo/bin/circom
            - name: Run sccache-cache
              uses: mozilla-actions/sccache-action@v0.0.3
            - name: Use Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "20.x"
            - name: Install snarkjs
              run: npm install -g snarkjs
            - name: Install mopro-cli
              run: (cd mopro-cli && cargo install --path .)
            - name: Prepare CI for Core and FFI
              run: ./scripts/prepare_ci.sh
            - name: Use mopro-cli
              run: |
                  export MOPRO_ROOT=$(PWD) # Export MOPRO_ROOT path
                  mopro deps # Install mopro dependencies
                  mopro init --platforms ios android # Initialize mopro-example-app
                  cd mopro-example-app
                  mopro prepare # Prepare your circuit artifacts
                  mopro build --platforms ios android # Build the project
                  mopro test #  Run end-to-end test (in Rust only)
            - name: Test the project for iOS
              run: |
                  cd mopro-example-app/ios/ExampleApp
                  xcodebuild test -scheme ExampleApp -workspace ExampleApp.xcworkspace -destination "platform=iOS Simulator,OS=17.5,name=iPhone 15 Pro" -quiet
            - name: Export bindings
              run: |
                  export MOPRO_ROOT=$(PWD) # Export MOPRO_ROOT path
                  cd mopro-example-app
                  mopro export-bindings --platforms ios android --destination out

    test-core:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - name: Install Rust toolchain
              uses: actions-rs/toolchain@v1
              with:
                  toolchain: "1.77"
                  override: true
            - name: Run sccache-cache
              uses: mozilla-actions/sccache-action@v0.0.3
            - name: Install circom
              run: |
                  sudo wget -O ~/.cargo/bin/circom https://github.com/iden3/circom/releases/download/v2.1.9/circom-${{runner.os}}-amd64
                  sudo chmod +x ~/.cargo/bin/circom
            - name: Use Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "20.x"
            - name: Install snarkjs
              run: npm install -g snarkjs
            - name: Prepare CI for Core and FFI
              run: ./scripts/prepare_ci.sh
            - name: Run circom tests
              run: |
                  cd mopro-core
                  cargo test -- --nocapture
            - name: Run halo2 tests
              run: |
                  export BUILD_CONFIG_PATH="$(pwd)/config-halo2.toml"
                  cd mopro-core
                  cargo test --features=halo2 -- --nocapture
    test-ffi:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - name: Install Rust toolchain
              uses: actions-rs/toolchain@v1
              with:
                  toolchain: "1.77"
                  override: true
            - name: Run sccache-cache
              uses: mozilla-actions/sccache-action@v0.0.3
            - name: Install circom
              run: |
                  sudo wget -O ~/.cargo/bin/circom https://github.com/iden3/circom/releases/download/v2.1.9/circom-${{runner.os}}-amd64
                  sudo chmod +x ~/.cargo/bin/circom
            - name: Use Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "20.x"
            - name: Install snarkjs
              run: npm install -g snarkjs
            - name: Prepare CI for Core and FFI
              run: ./scripts/prepare_ci.sh
            - name: Run FFI tests
              # TODO: Fix this custom jar thing
              run: |
                  cd mopro-ffi/
                  curl -L https://repo1.maven.org/maven2/net/java/dev/jna/jna/5.13.0/jna-5.13.0.jar -o jna-5.13.0.jar
                  CLASSPATH=jna-5.13.0.jar cargo test -- --nocapture
